# Assessments {.unnumbered}

## Assignment I

-   **Title:** Programmed Map
-   **Type:** Coursework
-   Due date: 30th October
-   25% of the final mark
-   Chance to be reassessed
-   Electronic submission only

This assignment will be evaluated on technical data processing, map design abilities (assemblage), and design overall narrative.

Once you have created your map, you will need to present it. Write 250 about the choices you made to create the map.

### Submit

Once completed, you will need to submit the following:

**An html version of an .qmd document with R integrated code.**

The assignment will be evaluated based on three main pillars, on which you will have to be successful to achieve a good mark:

1.  **Data Processing:** Your proficiency in handling and manipulating data will be a fundamental aspect of the assessment.

2.  **Map assemblage** This includes your ability to master technologies that allow you to create a compelling map.

3.  **Design and narrative:** Your success in designing an appealing map with a compelling narrative will play a pivotal role in your overall evaluation.

## Assignment II

-   **Title:** MCQ test
-   **Type:** 16th November - during the Lab
-   Due date: **TBC**
-   25% of the final mark
-   Chance to be reassessed
-   Electronic submission only

a)  To ensure students are engaging with the course content as it progresses and
b)  To provide core learning in advance of the third assessment.

## Assignment III

-   **Title:** Computational Essay
-   **Type:** Coursework
-   Due date: 8th January
-   50% of the final mark
-   Chance to be reassessed
-   Electronic submission only

A 2500 word computational essay on a geographic data set which they have explored and analysed using the skills and techniques developed during the course. Students will complete an essay which combines both code, data visualisation and prose supported by references in order to demonstrate sound understanding of all learning outcomes.

**Overview**

Here's the premise. You will take the role of a real-world geographic sata scientist tasked to explore datasets on New York City and find useful insights for a variety of city decision-makers. It does not matter if you have never been to New York City. In fact, this will help you focus on what you can learn about the city through the data, without the influence of prior knowledge. Furthermore, the assessment will not be marked based on how much you know about New York City but instead about how much you can show you have learned through analysing data. You will need contextualise your project by highlighting the opportunities and limitations of 'old' and 'new' forms of spatial data and reference relevant literature.

**What is a Computational Essay?**

A computational essay is an essay whose narrative is supported by code and computational results that are included in the essay itself. This piece of assessment is equivalent to 2,500 word. However, this is the overall weight. Since you will need to create not only narrative but also code and figures, here are the requirements:

-   Maximum of 1,000 words (ordinary text) (references do not contribute to the word count). You should answer the specified questions within the narrative. The questions should be included within a wider analysis.

-   Up to four maps or figures (a figure may include more than one map and will only count as one but needs to be integrated in the same overall output)

-   Up to one table

**There are three kinds of elements in a computational essay:**

1\. Ordinary text (in English)

2\. Computer input (R)

3\. Computer output These three elements all work together to express what's being communicated.

## Marking Criteria

This course follows the standard marking criteria (the general ones and those relating to GIS assignments in particular) set by the School of Environmental Sciences. Please make sure to check the student handbook and familiarise with them. In addition to these generic criteria, the following specific criteria will be used in cases where computer code is part of the work being assessed:

-   0-15: the code does not run and there is no documentation to follow it.
-   16-39: the code does not run, or runs but it does not produce the expected outcome. There is some documentation explaining its logic.
-   40-49: the code runs and produces the expected output. There is some documentation explaining its logic.
-   50-59: the code runs and produces the expected output. There is extensive documentation explaining its logic.
-   60-69: the code runs and produces the expected output. There is extensive documentation, properly formatted, explaining its logic.
-   70-79: all as above, plus the code design includes clear evidence of skills presented in advanced sections of the course (e.g. custom methods, list comprehensions, etc.).
-   80-100: all as above, plus the code contains novel contributions that extend/improve the functionality the student was provided with (e.g. algorithm optimizations, novel methods to perform the task, etc.).
